 Situation:
As part of my continuous learning journey in Cloud and DevOps, I wanted to get practical experience with container orchestration and Kubernetes on AWS. I decided to deploy the classic 2048 game as a real-time project using Amazon Elastic Kubernetes Service (EKS).

Task:
My goal was to *containerize the 2048 application, create a **scalable Kubernetes cluster* on AWS, and ensure smooth deployment and accessibility through a public endpoint — just like a real-world production setup.

Action:
* Created a Kubernetes cluster with Amazon EKS.
* Configured Deployments, Pods, and Services to manage the application lifecycle.
* Used AWS IAM roles for secure access and kubectl for cluster management.
* Implemented auto-scaling and load balancing for better performance and reliability.

Result:
The 2048 web app was successfully deployed on a scalable and highly available AWS EKS cluster. This project enhanced my hands-on skills in Kubernetes, AWS Cloud, and DevOps practices, bridging the gap between theory and real-world application.

Key Technologies:
AWS EKS | Kubernetes | IAM | EC2 | VPC | kubectl | Load Balancer | Eksctl

I’m proud of this milestone and excited to keep learning more about AWS & Cloud Engineering and DevOps automation! 
